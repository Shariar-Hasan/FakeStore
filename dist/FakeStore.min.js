class FakeStore{constructor(t){this.dbname=t,localStorage.getItem(t)||localStorage.setItem(t,JSON.stringify([]))}get(t){try{let e=JSON.parse(localStorage.getItem(this.dbname));if(t)return e.filter(e=>e.fs_id==t);return e}catch(r){console.error(r)}}push(t,e){try{let r=this.get();if(e||(e=t,t=this.createUID()),!("object"==typeof e&&Object(e)===e))throw Error("Pushed Value must be an object");e.fs_id=t;let i=r?.find(e=>e.fs_id===t);if(i)throw Error("Key already Exist! use Update method");return r.push(e),localStorage.setItem(this.dbname,JSON.stringify(r)),e}catch(s){console.error(s)}}update(t,e){try{let r=this.get();if(t&&e){let i=r.findIndex(e=>e.fs_id===t);if(i)return e.fs_id=t,r[i]=e,localStorage.setItem(this.dbname,JSON.stringify(r)),addedItem=this.get(t);throw Error("Key not matched")}throw Error("Key or Updated Data missing")}catch(s){console.error(s)}}remove(t){try{let e=this.get();if(void 0!==t||null!==t){let r=e.filter(e=>e.fs_id!==t);localStorage.setItem(this.dbname,JSON.stringify(r))}else localStorage.setItem(this.dbname,JSON.stringify([]))}catch(i){console.error(i)}}clear(){localStorage.removeItem(this.dbname)}createUID(t={}){let{start:e="",end:r=""}=t,i;return(e+="")+(""+new Date().getTime())+(r+="")}}