class FakeStore{constructor(e){this.dbname=e,localStorage.getItem(e)||localStorage.setItem(e,JSON.stringify([]))}get(e){try{let t=JSON.parse(localStorage.getItem(this.dbname));return e?t.filter((t=>t.fs_id==e)):t}catch(e){console.error(e)}}push(e,t){try{let r=this.get();t||(t=e,e=this.createUID()),t.fs_id=e;const s=r?.find((t=>t.fs_id===e));if(s)throw new Error("Key already Exist! use Update method");return r.push(t),localStorage.setItem(this.dbname,JSON.stringify(r)),this.get}catch(e){console.error(e)}}update(e,t){try{let r=this.get();if(e&&t){let s=r.findIndex((t=>t.fs_id===e));if(s)return t.fs_id=e,r[s]=t,localStorage.setItem(this.dbname,JSON.stringify(r)),this.get(e);throw new Error("Key not matched")}throw new Error("Key or Updated Data missing")}catch(e){console.error(e)}}remove(e){try{let t=this.get();if(e){const r=t.filter((t=>t.fs_id!==e));localStorage.setItem(this.dbname,JSON.stringify(r))}else localStorage.setItem(this.dbname,JSON.stringify([]))}catch(e){console.error(e)}}clear(){localStorage.removeItem(this.dbname)}createUID(e={}){let{start:t="",end:r=""}=e;return t+="",r+="",t+(""+(new Date).getTime())+r}}